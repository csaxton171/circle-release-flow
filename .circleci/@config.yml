version: 2.1

parameters:
  yarn-cache-version:
    type: string
    default: "v1"

orbs:
  aws-cli: circleci/aws-cli@0.1.15
  jq: circleci/jq@1.9.0

filter-develop-only: &filter-develop-only
  filters:
    branches:
      only: develop

filter-release-only: &filter-release-only
  filters:
    branches:
      only: /^release\/.*$/

filter-master-only: &filter-master-only
  filters:
    branches:
      only: master

workflows:
  version: 2.1

  validate-branch-workflow:
    jobs:
      - node-setup:
          filters:
            branches:
              ignore:
                - master
                - develop
                - /^release\/.*$/

      - node-validate:
          requires:
            - node-setup

      - node-test:
          requires:
            - node-setup
  #  we present the user with the offer to create
  #  a release each time there is a merge to develop
  offer-release-workflow:
    jobs:
      - node-setup:
          <<: *filter-develop-only

      - hold-release:
          type: approval
          requires:
            - node-setup

      # requires yarn and git checkout
      - release-create:
          requires:
            - hold-release

  initiate-release-workflow:
    jobs:
      - node-setup:
          <<: *filter-release-only

      - node-validate:
          requires:
            - node-setup

      - node-test:
          requires:
            - node-setup

      - deploy-infrastructure:
          environment: staging
          requires:
            - node-validate
            - node-test

      - deploy-system:
          environment: staging
          requires:
            - deploy-infrastructure

      - hold-release-review:
          type: approval
          requires:
            - deploy-infrastructure
            - deploy-system

      - release-promote:
          requires:
            - hold-release-review

  deploy-prod-workflow:
    jobs:
      - node-setup:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/

      - deploy-infrastructure:
          environment: production
          requires:
            - node-setup

      - deploy-system:
          environment: production
          requires:
            - deploy-infrastructure
